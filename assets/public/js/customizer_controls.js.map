{"version":3,"file":"js/customizer_controls.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,EAAE,CAACC,SAAS,CAACC,IAAI,CAAC,OAAO,EAAE,YAAM;EAChC,IAAMC,YAAY,GAAGH,EAAE,CAACC,SAAS,CAAC,oCAAoC,CAAC;EACvE,IAAMG,KAAK,GAAGJ,EAAE,CAACC,SAAS,CAACG,KAAK,CAAC,UAAU,CAAC;EAE5CA,KAAK,CAACC,gBAAgB,CAACC,QAAQ,CAAC;IAC/BC,IAAI,EAAE,kBAAkB;IACxBC,MAAM,EAAE,MAAM;IACdC,WAAW,EAAE,sBAAsB;IAAE;IACrCC,OAAO,EAAE,GAAG;IACZC,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,SAAAA,KAAA,EAAM;MACX;MACA,IAAMC,mBAAmB,GAAGC,kBAAA,CAAIV,KAAK,CAACW,QAAQ,CAAC,CAAC,EAAEC,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;QAChE,OAAOD,CAAC,CAACE,SAAS,CAACC,KAAK,CAAC,CAAC,GAAGF,CAAC,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;MACjD,CAAC,CAAC;;MAEF;MACAjB,YAAY,CAACkB,GAAG,CACfR,mBAAmB,CAACS,GAAG,CAAC,UAACC,OAAO;QAAA,OAAKA,OAAO,CAACC,EAAE;MAAA,EAAC,CAACC,IAAI,CAAC,GAAG,CAC1D,CAAC;IACF;EACD,CAAC,CAAC;;EAEF;EACA;EACA;EACAtB,YAAY,CAACD,IAAI,CAAC,UAACwB,QAAQ,EAAK;IAC/B,IAAMC,oBAAoB,GAAGD,QAAQ,CACnCE,KAAK,CAAC,GAAG,CAAC,CACVN,GAAG,CAAC,UAACO,SAAS;MAAA,OAAK7B,EAAE,CAACC,SAAS,CAACsB,OAAO,CAACM,SAAS,CAAC;IAAA,EAAC;IACrDF,oBAAoB,CAACG,OAAO,CAAC,UAACP,OAAO,EAAEQ,CAAC,EAAK;MAC5CR,OAAO,CAACS,QAAQ,CAACD,CAAC,CAAC;IACpB,CAAC,CAAC;EACH,CAAC,CAAC;AACH,CAAC,CAAC,C","sources":["webpack://wordpress-webpack-workflow/./assets/src/js/customizer-controls.js"],"sourcesContent":["/**\n * File customizer-controls.js.\n *\n * Theme Customizer enhancements for a better user experience.\n *\n * Contains handlers to make Theme Customizer controls.\n */\n\nwp.customize.bind('ready', () => {\n\tconst orderSetting = wp.customize('mod_data_homepage_section_sortable');\n\tconst panel = wp.customize.panel('homepage');\n\n\tpanel.contentContainer.sortable({\n\t\titem: '.control-section',\n\t\tcursor: 'move',\n\t\tplaceholder: 'sortable-placeholder', //highlight\n\t\topacity: 0.7,\n\t\taxis: 'y',\n\t\tstop: () => {\n\t\t\t// Get the sections in the new order.\n\t\t\tconst newlySortedSections = [...panel.sections()].sort((a, b) => {\n\t\t\t\treturn a.container.index() - b.container.index();\n\t\t\t});\n\n\t\t\t// Persist the new order as part of the changeset (and trigger preview update).\n\t\t\torderSetting.set(\n\t\t\t\tnewlySortedSections.map((section) => section.id).join(',')\n\t\t\t);\n\t\t},\n\t});\n\n\t// When the order setting is updated, make sure the sections get the appropriate priorities.\n\t// By setting the priorities in this way, the setting can be updated programmatically and the UI will\n\t// update accordingly. This two-way data binding.\n\torderSetting.bind((newOrder) => {\n\t\tconst newlyOrderedSections = newOrder\n\t\t\t.split(/,/)\n\t\t\t.map((sectionId) => wp.customize.section(sectionId));\n\t\tnewlyOrderedSections.forEach((section, i) => {\n\t\t\tsection.priority(i);\n\t\t});\n\t});\n});\n"],"names":["wp","customize","bind","orderSetting","panel","contentContainer","sortable","item","cursor","placeholder","opacity","axis","stop","newlySortedSections","_toConsumableArray","sections","sort","a","b","container","index","set","map","section","id","join","newOrder","newlyOrderedSections","split","sectionId","forEach","i","priority"],"sourceRoot":""}